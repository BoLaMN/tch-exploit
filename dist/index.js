var args, ask, dhcpd, dns, httpd, ip, pkg, port, rl, servers, tftp;

pkg = require('../package.json');

args = require('./args');

ip = args.ip || '58.162.0.1';

console.log("Technicolor OpenWRT Shell Unlocker v" + pkg.version + " By BoLaMN\n\n* Connect network cable from your computer to the WAN (red) port of the modem\n* Change your computers network card to be a static ip address\n\n  IPv4 Address: " + ip + "\n  Subnet Mask: 255.255.255.0\n  Default Gateway\\Router: " + ip + "\n");

ask = require('./ask');

dhcpd = require('./dhcp');

httpd = require('./http');

port = require('./get-port');

tftp = require('./tftp');

dns = require('./dns');

servers = [];

if (args.tftp) {
  servers.push.apply(servers, tftp(args));
} else if (args.dhcponly) {
  servers.push(dhcpd(ip, args.acsurl, args.acspass));
} else {
  ask(ip).then(port).then(function(p) {
    var u, url;
    u = new URL(args.acsurl || ("http://" + ip));
    u.port = p;
    url = u.toString();
    console.log("listening for cwmp requests at " + url);
    dns.route('*', ip);
    dns.listen();
    servers.push(dhcpd(ip, url, args.acspass));
    return servers.push(httpd(ip, p, url));
  });
}

if (process.platform === 'win32') {
  rl = require('readline').createInterface({
    input: process.stdin,
    output: process.stdout
  });
  rl.on('SIGINT', function() {
    return process.emit('SIGINT');
  });
}

process.on('SIGINT', function() {
  console.log("\nshutting down servers from SIGINT (Ctrl+C)");
  servers.forEach(function(server) {
    return server.close();
  });
  return setTimeout(function() {
    return process.exit();
  }, 2000);
});
