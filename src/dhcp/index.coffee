server = require './server'

path = require 'path'
args = require '../args'

toHexArray = (str) ->
  str
    .split ''
    .map (d, i) -> str.charCodeAt i

module.exports = (ip, acsurl, acspass) ->
  fullip = ip
  ip = ip.split '.'
  ip.pop()
  ip = ip.join '.'

  acsurl = toHexArray acsurl
  acspass = if acspass then toHexArray(acspass) else [ 84, 101, 108, 115, 116, 114, 97 ]

  vendor = [ 1, acsurl.length ].concat acsurl.concat [ 2, acspass.length ].concat acspass

  server
    .createServer
      range: [
        ip + '.10'
        ip + '.15'
      ]
      forceOptions: [ 'router', 'hostname', 'vendor' ]
      randomIP: true
      vendor: vendor
      netmask: '255.255.255.0'
      dns:  if args.dnsserver then  [ fullip ] else [ '8.8.8.8', '8.8.4.4' ]
      router: [ ip + '.1' ]
      hostname: 'second.gateway'
      broadcast: ip + '.255'
      server: ip + '.1'
    .on 'listening', (sock, type) ->
      { address, port } = sock.address()

      console.log "Waiting for DHCP#{type} request... #{ address }:#{ port }"
    .on 'message', (data) ->
      console.log '### MESSAGE', JSON.stringify data
    .on 'bound', (state, ans) ->
      console.log '### BOUND', JSON.stringify state
    .on 'error', (err, data) ->
      return unless data

      console.log '!!! ERROR', err, data
    .listen 67

  server
