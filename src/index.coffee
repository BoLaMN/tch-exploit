console.log """
Technicolor OpenWRT Shell Unlocker By BoLaMN

* Connect network cable from your computer to the WAN (red) port of the modem
* Change your computers network card to be a static ip address

  IPv4 Address: 58.162.0.1
  Subnet Mask: 255.255.255.0
  Default Gateway\\Router: 58.162.0.1

"""

{ Duplex } = require 'stream'
{ createServer } = require 'http'
{ networkInterfaces } = require 'os'

dhcpd = require './dhcp'
route = require './router'
cwmp = require './cwmp'
files = require './files'

readline = require 'readline'
  .createInterface
    input: process.stdin
    output: process.stdout

ask = (cb) ->
  cIp = null
  ips = {}

  for ifaceName, ifaceDetails of networkInterfaces()
    for addrInfo in ifaceDetails when not addrInfo.internal
      if addrInfo.family is 'IPv4'
        ips[ifaceName] = addrInfo.address

        if addrInfo.address is '58.162.0.1'
          cIp = ifaceName

  addr = []

  for name, ip of ips
    addr.push { name, ip }

  if cIp
    return cb addr.find ({ name }) -> name is cIp

  console.log 'Could not find interface with ip: 58.162.0.1'
  console.table addr

  readline.question "Select network interface: ", (intr) ->
    if not addr[intr]?
      console.log 'Unknown index: ' + intr
      return ask cb

    if addr[intr].ip isnt '58.162.0.1'
      return ask cb

    cb addr[intr]

ask (intr) ->
  ip = intr.ip.split '.'
  ip.pop()
  ip = ip.join '.'

  dhcpd
    .createServer
      range: [
        ip + '.10'
        ip + '.15'
      ]
      forceOptions: [ 'router', 'hostname', 'vendor' ]
      randomIP: true
      vendor: [
        1,
        18,
        104,
        116,
        116,
        112,
        58,
        47,
        47,
        53,
        56,
        46,
        49,
        54,
        50,
        46,
        48,
        46,
        49,
        47,
        2,
        7,
        84,
        101,
        108,
        115,
        116,
        114,
        97
      ]
      netmask: '255.255.255.0'
      router: [ ip + '.1' ]
      hostname: 'second.gateway'
      broadcast: ip + '.255'
      server: ip + '.1'
    .on 'message', (data) ->
      console.log '### MESSAGE', JSON.stringify data
    .on 'bound', (state) ->
      console.log '### BOUND', JSON.stringify state
    .on 'error', (err, data) ->
      return unless data

      console.log '!!! ERROR', err, data
    .listen 67

  route
    .get '/generic_wps_callback.sts', (req, res) ->
      console.log '>>> STS REQUEST'

      version = parseInt(req.params.version)

      file = files['generic_wps_callback']

      headers =
        'Content-Type': 'text/plain'
        'Content-Length': file.length

      console.log '>>> STS RESPONSE'
      console.dir [headers, file.toString('utf8')]

      res.writeHead 200, headers

      stream = new Duplex()
      stream.push file
      stream.push null
      stream.pipe res
    .post '/', cwmp(intr.ip)

  srv = createServer route
  srv.keepAliveTimeout = 30000

  srv.listen 80, intr.ip

  readline.close()

  console.log 'Waiting for DHCP request... ', intr.ip
